name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter (stable 3.22.2)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'
          cache: true

      # ðŸ›  Instalar Android SDK (Command-line Tools) manualmente
      - name: Install Android SDK CLI tools
        env:
          ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
        run: |
          set -e
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"

          # Descarga oficial de Google (CLI tools)
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip

          # Descomprime y mueve a la ruta correcta: .../cmdline-tools/latest/*
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          rm -f cmdline-tools.zip
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"

          # AÃ±ade al PATH del job
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

          # Acepta licencias e instala paquetes necesarios
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

          # DiagnÃ³stico rÃ¡pido
          sdkmanager --list | head -n 50

      # Genera carpeta android (si no existe) y apunta el SDK
      - name: Ensure Android project & local.properties
        run: |
          flutter create . --platforms=android
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          flutter doctor -v

      # Ajustes mÃ­nimos para compilar con ads
      - name: Patch Android SDK versions
        run: |
          if [ -f android/app/build.gradle ]; then
            sed -i 's/minSdkVersion [0-9]\+/minSdkVersion 21/' android/app/build.gradle || true
            sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 34/' android/app/build.gradle || true
            sed -i 's/compileSdkVersion flutter\.compileSdkVersion/compileSdkVersion 34/' android/app/build.gradle || true
          fi
          if [ -f android/app/build.gradle.kts ]; then
            sed -i 's/minSdkVersion\s*=\s*[0-9]\+/minSdkVersion = 21/' android/app/build.gradle.kts || true
            sed -i 's/compileSdkVersion\s*=\s*[0-9]\+/compileSdkVersion = 34/' android/app/build.gradle.kts || true
          fi
          echo "org.gradle.jvmargs=-Xmx4096m -Dkotlin.daemon.jvm.options=-Xmx2048m" >> android/gradle.properties || true
          echo "android.useAndroidX=true" >> android/gradle.properties || true

      - name: Flutter pub get
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug -v

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/**/*.apk
          if-no-files-found: error
