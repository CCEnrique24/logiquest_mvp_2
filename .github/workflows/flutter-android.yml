name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Flutter estable (pin fijo para evitar problemas con 'stable')
      - name: Set up Flutter (stable 3.22.2)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"
          cache: true

      # ✅ Instala Android SDK con inputs válidos
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          packages: |
            cmdline-tools;latest
            platform-tools
            platforms;android-34
            build-tools;34.0.0

      - name: flutter --version
        run: flutter --version

      # Crea /android si no existe
      - name: Ensure Android folder exists
        run: |
          if [ ! -d "android" ]; then
            flutter create . --platforms=android
          fi

      # (Opcional) Más memoria para Gradle/Kotlin
      - name: Gradle properties
        run: |
          echo "org.gradle.jvmargs=-Xmx4096m -Dkotlin.daemon.jvm.options=-Xmx2048m" >> android/gradle.properties || true

      # Depuración: ver estructura de android/
      - name: Show Android tree (debug)
        run: ls -R android || true

      # Asegurar minSdkVersion >= 21 (Groovy/Kotlin)
      - name: Ensure minSdkVersion >= 21 (Groovy/Kotlin)
        shell: bash
        run: |
          set -e
          FILE_GROOVY="android/app/build.gradle"
          FILE_KOTLIN="android/app/build.gradle.kts"
          if [ -f "$FILE_GROOVY" ]; then
            echo "Patching $FILE_GROOVY"
            sed -i 's/minSdkVersion [0-9][0-9]*/minSdkVersion 21/' "$FILE_GROOVY" || true
            if ! grep -q "minSdkVersion" "$FILE_GROOVY"; then
              awk '/defaultConfig *\{/{print; print "        minSdkVersion 21"; next}1' "$FILE_GROOVY" > tmp && mv tmp "$FILE_GROOVY"
            fi
          elif [ -f "$FILE_KOTLIN" ]; then
            echo "Patching $FILE_KOTLIN"
            sed -i 's/minSdkVersion\s*=\s*[0-9][0-9]*/minSdkVersion = 21/' "$FILE_KOTLIN" || true
            if ! grep -q "minSdkVersion" "$FILE_KOTLIN"; then
              awk '/defaultConfig *\{/{print; print "        minSdkVersion = 21"; next}1' "$FILE_KOTLIN" > tmp && mv tmp "$FILE_KOTLIN"
            fi
          else
            echo "No build.gradle(.kts) found; skipping minSdk patch."
          fi

      - name: Flutter pub get
        run: flutter pub get

      # Compila en debug con logs guardados en archivo
      - name: Build debug APK (installable)
        run: |
          set -o pipefail
          flutter build apk --debug -v |& tee flutter_build_log.txt

      # Sube APK (con rutas alternativas por si cambia la ubicación)
      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logiquest-debug-apk
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/apk/debug/app-debug.apk
            build/app/outputs/apk/**/*.apk
          if-no-files-found: warn

      # Sube SIEMPRE los logs para diagnóstico
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            flutter_build_log.txt
            android/app/build.gradle
            android/app/build.gradle.kts
